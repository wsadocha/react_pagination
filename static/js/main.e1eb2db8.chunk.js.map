{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","pageList","itemList","i","push","_jsx","className","cn","active","children","href","concat","onClick","_jsxs","_Fragment","disabled","slice","items","from","to","numbers","n","getNumbers","map","App","setPerPage","useState","setCurrentPage","firstItem","lastItem","length","id","value","onChange","e","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1eb2db8.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: string;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}: Props) => {\n  const amountOfPages = Math.ceil(total / +perPage);\n  const pageList = [];\n  const itemList = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= amountOfPages; i++) {\n    pageList.push(\n      <li\n        key={i}\n        className={cn({\n          'page-item': true,\n          active: currentPage === i,\n        })}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          onClick={() => onPageChange(i)}\n        >\n          {i}\n        </a>\n      </li>,\n    );\n  }\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < total; i++) {\n    itemList.push(\n      <li key={i + 1} data-cy=\"item\">\n        Item {i + 1}\n      </li>,\n    );\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pageList}\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === amountOfPages,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === amountOfPages ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage < amountOfPages) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemList.slice(\n          +perPage * +currentPage - +perPage,\n          +perPage * +currentPage,\n        )}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItem = +perPage * +currentPage - +perPage + 1;\n  let lastItem = +perPage * +currentPage;\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setPerPage(e.target.value);\n  };\n\n  if (lastItem > items.length) {\n    lastItem = items.length;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {firstItem} - {lastItem} of {items.length})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}